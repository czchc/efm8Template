C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/04/2018 11:39:45 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\lib\efm8\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\Projects\code
                    -\efm8\efm8Template\lib\efm8\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTI
                    -MIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\Projects\code\efm8\efm8Template\inc;D:\Projects\cod
                    -e\efm8\efm8Template\lib\efm8\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/shared/si8051base
                    -;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/EFM8BB2/inc;C:/SiliconLabs/SimplicityStudio/v4/de
                    -veloper/sdks/8051/v4.1.0//Device/EFM8BB2/peripheral_driver/inc) PRINT(.\lib\efm8\src\InitDevice.lst) COND PAGEWIDTH(120)
                    - PAGELENGTH(65) OBJECT(.\lib\efm8\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PBCFG_0_enter_DefaultMode_from_RESET();
  29   1              CIP51_0_enter_DefaultMode_from_RESET();
  30   1              CLOCK_0_enter_DefaultMode_from_RESET();
  31   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  32   1              SPI_0_enter_DefaultMode_from_RESET();
  33   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  34   1              // Restore the SFRPAGE
  35   1              SFRPAGE = SFRPAGE_save;
  36   1              // [Config Calls]$
  37   1      
  38   1      }
  39          
  40          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  41   1              // $[WDTCN - Watchdog Timer Control]
  42   1              SFRPAGE = 0x00;
  43   1              // [WDTCN - Watchdog Timer Control]$
  44   1      
  45   1      }
  46          
  47          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[P0 - Port 0 Pin Latch]
  49   1              // [P0 - Port 0 Pin Latch]$
  50   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/04/2018 11:39:45 PAGE 2   

  51   1              // $[P0MDOUT - Port 0 Output Mode]
  52   1              /***********************************************************************
  53   1               - P0.0 output is push-pull
  54   1               - P0.1 output is open-drain
  55   1               - P0.2 output is push-pull
  56   1               - P0.3 output is push-pull
  57   1               - P0.4 output is push-pull
  58   1               - P0.5 output is open-drain
  59   1               - P0.6 output is open-drain
  60   1               - P0.7 output is open-drain
  61   1               ***********************************************************************/
  62   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  63   1                              | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__PUSH_PULL
  64   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  65   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  66   1              // [P0MDOUT - Port 0 Output Mode]$
  67   1      
  68   1              // $[P0MDIN - Port 0 Input Mode]
  69   1              // [P0MDIN - Port 0 Input Mode]$
  70   1      
  71   1              // $[P0SKIP - Port 0 Skip]
  72   1              // [P0SKIP - Port 0 Skip]$
  73   1      
  74   1              // $[P0MASK - Port 0 Mask]
  75   1              // [P0MASK - Port 0 Mask]$
  76   1      
  77   1              // $[P0MAT - Port 0 Match]
  78   1              // [P0MAT - Port 0 Match]$
  79   1      
  80   1      }
  81          
  82          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  83   1              // $[XBR2 - Port I/O Crossbar 2]
  84   1              /***********************************************************************
  85   1               - Weak Pullups enabled 
  86   1               - Crossbar enabled
  87   1               - UART1 I/O unavailable at Port pin
  88   1               - UART1 RTS1 unavailable at Port pin
  89   1               - UART1 CTS1 unavailable at Port pin
  90   1               ***********************************************************************/
  91   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
  92   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
  93   1                              | XBR2_URT1CTSE__DISABLED;
  94   1              // [XBR2 - Port I/O Crossbar 2]$
  95   1      
  96   1              // $[PRTDRV - Port Drive Strength]
  97   1              // [PRTDRV - Port Drive Strength]$
  98   1      
  99   1              // $[XBR0 - Port I/O Crossbar 0]
 100   1              /***********************************************************************
 101   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 102   1               - SPI I/O routed to Port pins
 103   1               - SMBus 0 I/O unavailable at Port pins
 104   1               - CP0 unavailable at Port pin
 105   1               - Asynchronous CP0 unavailable at Port pin
 106   1               - CP1 unavailable at Port pin
 107   1               - Asynchronous CP1 unavailable at Port pin
 108   1               - SYSCLK unavailable at Port pin
 109   1               ***********************************************************************/
 110   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 111   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 112   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 113   1              // [XBR0 - Port I/O Crossbar 0]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/04/2018 11:39:45 PAGE 3   

 114   1      
 115   1              // $[XBR1 - Port I/O Crossbar 1]
 116   1              // [XBR1 - Port I/O Crossbar 1]$
 117   1      
 118   1      }
 119          
 120          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 121   1              // $[PFE0CN - Prefetch Engine Control]
 122   1              /***********************************************************************
 123   1               - Enable the prefetch engine 
 124   1               - SYSCLK < 50 MHz
 125   1               ***********************************************************************/
 126   1              SFRPAGE = 0x10;
 127   1              PFE0CN = PFE0CN_PFEN__ENABLED | PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 128   1              // [PFE0CN - Prefetch Engine Control]$
 129   1      
 130   1      }
 131          
 132          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 133   1              // $[HFOSC1 Setup]
 134   1              // Ensure SYSCLK is > 24 MHz before switching to HFOSC1
 135   1              SFRPAGE = 0x00;
 136   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 137   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 138   1                      ;
 139   1              // [HFOSC1 Setup]$
 140   1      
 141   1              // $[CLKSEL - Clock Select]
 142   1              /***********************************************************************
 143   1               - Clock derived from the Internal High Frequency Oscillator 1
 144   1               - SYSCLK is equal to selected clock source divided by 2
 145   1               ***********************************************************************/
 146   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 147   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 148   1                      ;
 149   1              // [CLKSEL - Clock Select]$
 150   1      
 151   1      }
 152          
 153          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 154   1              // $[CKCON0 - Clock Control 0]
 155   1              /***********************************************************************
 156   1               - System clock divided by 48
 157   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 158   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 159   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 160   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 161   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 162   1               - Timer 1 uses the clock defined by the prescale field, SCA
 163   1               ***********************************************************************/
 164   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 165   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 166   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 167   1                              | CKCON0_T1M__PRESCALE;
 168   1              // [CKCON0 - Clock Control 0]$
 169   1      
 170   1              // $[CKCON1 - Clock Control 1]
 171   1              // [CKCON1 - Clock Control 1]$
 172   1      
 173   1              // $[TMOD - Timer 0/1 Mode]
 174   1              // [TMOD - Timer 0/1 Mode]$
 175   1      
 176   1              // $[TCON - Timer 0/1 Control]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/04/2018 11:39:45 PAGE 4   

 177   1              // [TCON - Timer 0/1 Control]$
 178   1      
 179   1      }
 180          
 181          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 182   1              // $[SPI0CKR - SPI0 Clock Rate]
 183   1              // [SPI0CKR - SPI0 Clock Rate]$
 184   1      
 185   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 186   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 187   1      
 188   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 189   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 190   1      
 191   1              // $[SPI0CFG - SPI0 Configuration]
 192   1              /***********************************************************************
 193   1               - Enable master mode. Operate as a master
 194   1               ***********************************************************************/
 195   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 196   1              // [SPI0CFG - SPI0 Configuration]$
 197   1      
 198   1              // $[SPI0CN0 - SPI0 Control]
 199   1              /***********************************************************************
 200   1               - Enable the SPI module
 201   1               ***********************************************************************/
 202   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 203   1              // [SPI0CN0 - SPI0 Control]$
 204   1      
 205   1      }
 206          
 207          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 208   1              // $[EIE1 - Extended Interrupt Enable 1]
 209   1              // [EIE1 - Extended Interrupt Enable 1]$
 210   1      
 211   1              // $[EIE2 - Extended Interrupt Enable 2]
 212   1              // [EIE2 - Extended Interrupt Enable 2]$
 213   1      
 214   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 215   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 216   1      
 217   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 218   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 219   1      
 220   1              // $[EIP2 - Extended Interrupt Priority 2]
 221   1              // [EIP2 - Extended Interrupt Priority 2]$
 222   1      
 223   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 224   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 225   1      
 226   1              // $[IE - Interrupt Enable]
 227   1              /***********************************************************************
 228   1               - Enable each interrupt according to its individual mask setting
 229   1               - Disable external interrupt 0
 230   1               - Disable external interrupt 1
 231   1               - Disable all SPI0 interrupts
 232   1               - Enable interrupt requests generated by the TF0 flag
 233   1               - Disable all Timer 1 interrupt
 234   1               - Disable Timer 2 interrupt
 235   1               - Disable UART0 interrupt
 236   1               ***********************************************************************/
 237   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 238   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 239   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/04/2018 11:39:45 PAGE 5   

 240   1              // [IE - Interrupt Enable]$
 241   1      
 242   1              // $[IP - Interrupt Priority]
 243   1              // [IP - Interrupt Priority]$
 244   1      
 245   1              // $[IPH - Interrupt Priority High]
 246   1              // [IPH - Interrupt Priority High]$
 247   1      
 248   1      }
 249          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
